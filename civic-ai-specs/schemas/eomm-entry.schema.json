{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "E.O.M.M. Entry Schema",
  "description": "Schema for Encyclopedia of Moral Machines entries",
  "type": "object",
  "required": ["id", "timestamp", "author", "title", "content", "category", "citations"],
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the entry",
      "pattern": "^[a-zA-Z0-9_-]{1,64}$"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of when the entry was created"
    },
    "author": {
      "type": "object",
      "description": "Information about the author",
      "required": ["id", "name"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the author"
        },
        "name": {
          "type": "string",
          "description": "Display name of the author"
        },
        "affiliation": {
          "type": "string",
          "description": "Author's institutional affiliation"
        },
        "credentials": {
          "type": "array",
          "description": "Author's credentials and qualifications",
          "items": {
            "type": "string"
          }
        },
        "cultural_background": {
          "type": "string",
          "description": "Author's cultural background"
        }
      }
    },
    "title": {
      "type": "string",
      "description": "Title of the entry",
      "minLength": 1,
      "maxLength": 200
    },
    "content": {
      "type": "object",
      "description": "The main content of the entry",
      "required": ["abstract", "body"],
      "properties": {
        "abstract": {
          "type": "string",
          "description": "Brief summary of the entry",
          "minLength": 1,
          "maxLength": 500
        },
        "body": {
          "type": "string",
          "description": "Main content of the entry",
          "minLength": 1,
          "maxLength": 10000
        },
        "key_points": {
          "type": "array",
          "description": "Key points or takeaways from the entry",
          "items": {
            "type": "string"
          }
        },
        "examples": {
          "type": "array",
          "description": "Examples that illustrate the concepts",
          "items": {
            "type": "object",
            "required": ["description"],
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the example"
              },
              "context": {
                "type": "string",
                "description": "Context where the example applies"
              },
              "outcome": {
                "type": "string",
                "description": "Expected or actual outcome"
              }
            }
          }
        }
      }
    },
    "category": {
      "type": "string",
      "description": "Category of the entry",
      "enum": [
        "ethical_principles",
        "cultural_values",
        "governance_models",
        "technical_standards",
        "case_studies",
        "best_practices",
        "research_findings",
        "community_guidelines",
        "legal_frameworks",
        "philosophical_foundations"
      ]
    },
    "tags": {
      "type": "array",
      "description": "Tags for categorizing and searching the entry",
      "items": {
        "type": "string"
      }
    },
    "citations": {
      "type": "array",
      "description": "Citations and references used in the entry",
      "items": {
        "type": "object",
        "required": ["type", "title", "url"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["academic_paper", "book", "website", "video", "podcast", "interview", "other"]
          },
          "title": {
            "type": "string",
            "description": "Title of the cited work"
          },
          "authors": {
            "type": "array",
            "description": "Authors of the cited work",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the cited work"
          },
          "doi": {
            "type": "string",
            "description": "Digital Object Identifier"
          },
          "publication_date": {
            "type": "string",
            "format": "date",
            "description": "Publication date"
          },
          "access_date": {
            "type": "string",
            "format": "date",
            "description": "Date when the work was accessed"
          }
        }
      }
    },
    "cultural_context": {
      "type": "object",
      "description": "Cultural context information",
      "properties": {
        "primary_culture": {
          "type": "string",
          "description": "Primary cultural context"
        },
        "cultural_values": {
          "type": "array",
          "description": "Cultural values reflected in the entry",
          "items": {
            "type": "string"
          }
        },
        "cultural_norms": {
          "type": "array",
          "description": "Cultural norms that influenced the entry",
          "items": {
            "type": "string"
          }
        },
        "cross_cultural_applicability": {
          "type": "boolean",
          "description": "Whether the entry applies across cultures"
        }
      }
    },
    "verification": {
      "type": "object",
      "description": "Verification information",
      "properties": {
        "verified": {
          "type": "boolean",
          "description": "Whether the entry has been verified"
        },
        "verification_date": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the entry was verified"
        },
        "verifier": {
          "type": "string",
          "description": "Identifier of the verifier"
        },
        "verification_method": {
          "type": "string",
          "description": "Method used for verification"
        },
        "confidence_score": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Confidence score for the entry"
        }
      }
    },
    "community_feedback": {
      "type": "object",
      "description": "Community feedback on the entry",
      "properties": {
        "rating": {
          "type": "number",
          "minimum": 1,
          "maximum": 5,
          "description": "Average community rating"
        },
        "review_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of community reviews"
        },
        "helpful_votes": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of helpful votes"
        },
        "comments": {
          "type": "array",
          "description": "Community comments on the entry",
          "items": {
            "type": "object",
            "required": ["author", "content", "timestamp"],
            "properties": {
              "author": {
                "type": "string",
                "description": "Author of the comment"
              },
              "content": {
                "type": "string",
                "description": "Content of the comment"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "When the comment was made"
              }
            }
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of the entry"
        },
        "last_updated": {
          "type": "string",
          "format": "date-time",
          "description": "When the entry was last updated"
        },
        "update_reason": {
          "type": "string",
          "description": "Reason for the last update"
        },
        "related_entries": {
          "type": "array",
          "description": "Related entry IDs",
          "items": {
            "type": "string"
          }
        },
        "difficulty_level": {
          "type": "string",
          "enum": ["beginner", "intermediate", "advanced", "expert"],
          "description": "Difficulty level of the entry"
        }
      }
    }
  },
  "additionalProperties": false
}