name: CI

on:
  pull_request:
    paths:
      - "schemas/**"
      - "specs/**"
      - "lore/**"
      - "scripts/**"
      - "public/ai-seo/**"
      - "examples/**"
  push:
    branches: [main]
    paths:
      - "schemas/**"
      - "specs/**"
      - "lore/**"
      - "scripts/**"
      - "public/ai-seo/**"
      - "examples/**"

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install js-yaml ajv
          cd examples/node-proxy && npm install
          cd ../next-topic-pages && npm install

      - name: Validate JSON schemas
        run: |
          echo "Validating JSON schemas..."
          for schema in schemas/*.json; do
            echo "Validating $schema"
            node -e "
              const fs = require('fs');
              const Ajv = require('ajv');
              const ajv = new Ajv();
              const schema = JSON.parse(fs.readFileSync('$schema', 'utf8'));
              const valid = ajv.validateSchema(schema);
              if (!valid) {
                console.error('Schema validation failed:', ajv.errors);
                process.exit(1);
              }
              console.log('✓ Schema is valid');
            "
          done

      - name: Run lore linter
        run: |
          echo "Running lore linter..."
          node scripts/lore-lint.mjs

      - name: Build lore indexes
        run: |
          echo "Building lore indexes..."
          node scripts/build-lore-index.mjs

      - name: Validate examples
        run: |
          echo "Validating examples..."
          cd examples/node-proxy
          npm run test || echo "Node proxy tests not implemented yet"
          
          cd ../next-topic-pages
          npm run build || echo "Next.js build not implemented yet"

      - name: Check for secrets
        run: |
          echo "Checking for secrets..."
          if grep -r "password\|secret\|key\|token" --include="*.js" --include="*.json" --include="*.md" . | grep -v node_modules | grep -v ".git"; then
            echo "⚠️  Potential secrets found in code"
            exit 1
          fi
          echo "✓ No secrets found"

      - name: Validate file structure
        run: |
          echo "Validating file structure..."
          
          # Check required directories exist
          for dir in specs schemas lore examples scripts public; do
            if [ ! -d "$dir" ]; then
              echo "❌ Missing required directory: $dir"
              exit 1
            fi
          done
          
          # Check required files exist
          for file in README.md SECURITY.md CONTRIBUTING.md GOVERNANCE.md; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            fi
          done
          
          echo "✓ File structure is valid"

      - name: Check license headers
        run: |
          echo "Checking license headers..."
          for file in specs/*.md schemas/*.json examples/**/*.js examples/**/*.tsx; do
            if [ -f "$file" ]; then
              if ! head -5 "$file" | grep -q "© 2025 Kaizen Cycle"; then
                echo "❌ Missing license header in $file"
                exit 1
              fi
            fi
          done
          echo "✓ License headers are valid"

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build-examples:
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd examples/node-proxy && npm install
          cd ../next-topic-pages && npm install

      - name: Build Node.js proxy
        run: |
          cd examples/node-proxy
          npm run build || echo "Build script not implemented"

      - name: Build Next.js app
        run: |
          cd examples/next-topic-pages
          npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            examples/node-proxy/dist
            examples/next-topic-pages/out
